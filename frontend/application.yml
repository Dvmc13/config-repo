server:
  port: 8084

spring:
  application:
    name: frontend
  main:
    web-application-type: reactive
    allow-bean-definition-overriding: true
  
  # Importante: para que lea configuración remota
  cloud:
    config:
      uri: http://config-server:8888
      fail-fast: true
      import-check:
        enabled: false
    # Habilita la comunicación con Spring Cloud Bus
    bus:
      enabled: true
    # Configuración del gateway
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: microusers-route
          uri: http://microusers:8081
          predicates:
            - Path=/api/users/**,/api/login
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: CircuitBreaker
              args:
                name: microusersCircuitBreaker
                fallbackUri: forward:/fallback/microusers
                  
        - id: microproducts-route
          uri: http://microproducts:8083
          predicates:
            - Path=/api/products/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: Retry
              args:
                retries: 3
                methods: GET,POST,PUT,DELETE
                backoff:
                  firstBackoff: 100ms
                  maxBackoff: 1000ms
                  factor: 2

        - id: microorders-route
          uri: http://microorders:8082
          predicates:
            - Path=/api/orders/**
          filters:
            - RewritePath=/api/(?<segment>.*), /$\{segment}
            - name: InMemoryRateLimiter
              args:
                limit: 2
                refreshPeriod: 10s
      metrics:
        enabled: true

  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default,chaos-monkey}

# Configuración de Resilience4j
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 100
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 5s  # Actualizado a 10s
        failureRateThreshold: 50  # Actualizado a 20
        eventConsumerBufferSize: 50
    instances:
      microusersCircuitBreaker:
        baseConfig: default


  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 500ms
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        eventConsumerBufferSize: 100
        registerHealthIndicator: true
    instances:
      microproductsRetry:
        baseConfig: default
        maxAttempts: 3
        waitDuration: 1s
        retryExceptions:
          - java.lang.RuntimeException
          - java.io.IOException
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        eventConsumerBufferSize: 100
        registerHealthIndicator: true

  # Configuración de Rate Limiter
  ratelimiter:
    configs:
      default:
        limitForPeriod: 2
        limitRefreshPeriod: 10s
        timeoutDuration: 3s
        registerHealthIndicator: true
        eventConsumerBufferSize: 100
        recordEvents: true
    instances:
      microordersRateLimiter:
        baseConfig: default

# Configuración de Chaos Monkey
chaos:
  monkey:
    enabled: false

management:
  endpoints:
    env:
      # Para mirar todos los valores
      keys-to-sanitize: []
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
    chaosmonkey:
      enabled: true
    ratelimiters:
      enabled: true
    ratelimiterevents:
      enabled: true
    gateway:
      enabled: true
    retryevents:
      enabled: true
  health:
    circuitbreakers:
      enabled: true
    retry:
      enabled: true
    ratelimiters:
      enabled: true
    ratelimiterevents:
      enabled: true
  metrics:
    tags:
      application: ${spring.application.name}
    distribution:
      percentiles-histogram:
        resilience4j.retry: true
        resilience4j.ratelimiter: true
    enabled: true
    legacy:
      enabled: true
  springboot:
    actuator:
      health:
        enabled: true
      metrics:
        enabled: true
      events:
        enabled: true
        
    export:
      prometheus:
        enabled: true
